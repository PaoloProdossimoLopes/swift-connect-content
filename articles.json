{
  "articles": [
    {
      "id": 1,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-03-04",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 2,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-03-05",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 3,
      "thumbnailUrl": "https://example.com",
      "title": "Testes Unitários com XCTest",
      "description": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift.",
      "createdAt": "2025-03-06",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Testes Unitários com XCTest"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender testes unitários com xctest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "func testSoma() {\n    XCTAssertEqual(2 + 2, 4)\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com testes unitários com xctest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar testes unitários com xctest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Testes Unitários com XCTest é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 4,
      "thumbnailUrl": "https://example.com",
      "title": "Core Data Avançado",
      "description": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance.",
      "createdAt": "2025-03-07",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Core Data Avançado"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender core data avançado permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Item\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com core data avançado. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar core data avançado pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Core Data Avançado é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 5,
      "thumbnailUrl": "https://example.com",
      "title": "Integração com APIs REST",
      "description": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable.",
      "createdAt": "2025-03-08",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Integração com APIs REST"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender integração com apis rest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let (data, _) = try await URLSession.shared.data(from: url)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com integração com apis rest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar integração com apis rest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Integração com APIs REST é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 6,
      "thumbnailUrl": "https://example.com",
      "title": "Animações Complexas em SwiftUI",
      "description": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect.",
      "createdAt": "2025-03-09",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Animações Complexas em SwiftUI"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender animações complexas em swiftui permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "withAnimation(.easeInOut) {\n    self.expanded.toggle()\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com animações complexas em swiftui. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar animações complexas em swiftui pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Animações Complexas em SwiftUI é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 7,
      "thumbnailUrl": "https://example.com",
      "title": "Acessibilidade em Aplicativos iOS",
      "description": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada.",
      "createdAt": "2025-03-10",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Acessibilidade em Aplicativos iOS"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender acessibilidade em aplicativos ios permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "Text(\"Comprar\").accessibilityLabel(\"Botão de compra\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com acessibilidade em aplicativos ios. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar acessibilidade em aplicativos ios pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Acessibilidade em Aplicativos iOS é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 8,
      "thumbnailUrl": "https://example.com",
      "title": "MapKit e Localização",
      "description": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation.",
      "createdAt": "2025-03-11",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: MapKit e Localização"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender mapkit e localização permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "mapView.setRegion(MKCoordinateRegion(...), animated: true)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com mapkit e localização. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar mapkit e localização pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "MapKit e Localização é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 9,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-03-12",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 10,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-03-13",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 11,
      "thumbnailUrl": "https://example.com",
      "title": "Testes Unitários com XCTest",
      "description": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift.",
      "createdAt": "2025-03-14",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Testes Unitários com XCTest"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender testes unitários com xctest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "func testSoma() {\n    XCTAssertEqual(2 + 2, 4)\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com testes unitários com xctest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar testes unitários com xctest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Testes Unitários com XCTest é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 12,
      "thumbnailUrl": "https://example.com",
      "title": "Core Data Avançado",
      "description": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance.",
      "createdAt": "2025-03-15",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Core Data Avançado"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender core data avançado permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Item\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com core data avançado. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar core data avançado pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Core Data Avançado é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 13,
      "thumbnailUrl": "https://example.com",
      "title": "Integração com APIs REST",
      "description": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable.",
      "createdAt": "2025-03-16",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Integração com APIs REST"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender integração com apis rest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let (data, _) = try await URLSession.shared.data(from: url)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com integração com apis rest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar integração com apis rest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Integração com APIs REST é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 14,
      "thumbnailUrl": "https://example.com",
      "title": "Animações Complexas em SwiftUI",
      "description": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect.",
      "createdAt": "2025-03-17",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Animações Complexas em SwiftUI"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender animações complexas em swiftui permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "withAnimation(.easeInOut) {\n    self.expanded.toggle()\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com animações complexas em swiftui. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar animações complexas em swiftui pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Animações Complexas em SwiftUI é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 15,
      "thumbnailUrl": "https://example.com",
      "title": "Acessibilidade em Aplicativos iOS",
      "description": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada.",
      "createdAt": "2025-03-18",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Acessibilidade em Aplicativos iOS"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender acessibilidade em aplicativos ios permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "Text(\"Comprar\").accessibilityLabel(\"Botão de compra\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com acessibilidade em aplicativos ios. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar acessibilidade em aplicativos ios pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Acessibilidade em Aplicativos iOS é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 16,
      "thumbnailUrl": "https://example.com",
      "title": "MapKit e Localização",
      "description": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation.",
      "createdAt": "2025-03-19",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: MapKit e Localização"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender mapkit e localização permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "mapView.setRegion(MKCoordinateRegion(...), animated: true)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com mapkit e localização. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar mapkit e localização pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "MapKit e Localização é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 17,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-03-20",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 18,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-03-21",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 19,
      "thumbnailUrl": "https://example.com",
      "title": "Testes Unitários com XCTest",
      "description": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift.",
      "createdAt": "2025-03-22",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Testes Unitários com XCTest"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender testes unitários com xctest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "func testSoma() {\n    XCTAssertEqual(2 + 2, 4)\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com testes unitários com xctest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar testes unitários com xctest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Testes Unitários com XCTest é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 20,
      "thumbnailUrl": "https://example.com",
      "title": "Core Data Avançado",
      "description": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance.",
      "createdAt": "2025-03-23",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Core Data Avançado"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender core data avançado permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Item\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com core data avançado. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar core data avançado pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Core Data Avançado é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 21,
      "thumbnailUrl": "https://example.com",
      "title": "Integração com APIs REST",
      "description": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable.",
      "createdAt": "2025-03-24",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Integração com APIs REST"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender integração com apis rest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let (data, _) = try await URLSession.shared.data(from: url)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com integração com apis rest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar integração com apis rest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Integração com APIs REST é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 22,
      "thumbnailUrl": "https://example.com",
      "title": "Animações Complexas em SwiftUI",
      "description": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect.",
      "createdAt": "2025-03-25",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Animações Complexas em SwiftUI"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender animações complexas em swiftui permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "withAnimation(.easeInOut) {\n    self.expanded.toggle()\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com animações complexas em swiftui. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar animações complexas em swiftui pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Animações Complexas em SwiftUI é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 23,
      "thumbnailUrl": "https://example.com",
      "title": "Acessibilidade em Aplicativos iOS",
      "description": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada.",
      "createdAt": "2025-03-26",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Acessibilidade em Aplicativos iOS"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender acessibilidade em aplicativos ios permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "Text(\"Comprar\").accessibilityLabel(\"Botão de compra\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com acessibilidade em aplicativos ios. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar acessibilidade em aplicativos ios pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Acessibilidade em Aplicativos iOS é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 24,
      "thumbnailUrl": "https://example.com",
      "title": "MapKit e Localização",
      "description": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation.",
      "createdAt": "2025-03-27",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: MapKit e Localização"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender mapkit e localização permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "mapView.setRegion(MKCoordinateRegion(...), animated: true)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com mapkit e localização. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar mapkit e localização pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "MapKit e Localização é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 25,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-03-28",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 26,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-03-29",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 27,
      "thumbnailUrl": "https://example.com",
      "title": "Testes Unitários com XCTest",
      "description": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift.",
      "createdAt": "2025-03-30",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Testes Unitários com XCTest"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender testes unitários com xctest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "func testSoma() {\n    XCTAssertEqual(2 + 2, 4)\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com testes unitários com xctest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar testes unitários com xctest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Testes Unitários com XCTest é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 28,
      "thumbnailUrl": "https://example.com",
      "title": "Core Data Avançado",
      "description": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance.",
      "createdAt": "2025-03-31",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Core Data Avançado"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender core data avançado permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Item\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com core data avançado. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar core data avançado pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Core Data Avançado é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 29,
      "thumbnailUrl": "https://example.com",
      "title": "Integração com APIs REST",
      "description": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable.",
      "createdAt": "2025-04-01",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Integração com APIs REST"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender integração com apis rest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let (data, _) = try await URLSession.shared.data(from: url)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com integração com apis rest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar integração com apis rest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Integração com APIs REST é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 30,
      "thumbnailUrl": "https://example.com",
      "title": "Animações Complexas em SwiftUI",
      "description": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect.",
      "createdAt": "2025-04-02",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Animações Complexas em SwiftUI"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender animações complexas em swiftui permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "withAnimation(.easeInOut) {\n    self.expanded.toggle()\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com animações complexas em swiftui. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar animações complexas em swiftui pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Animações Complexas em SwiftUI é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 31,
      "thumbnailUrl": "https://example.com",
      "title": "Acessibilidade em Aplicativos iOS",
      "description": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada.",
      "createdAt": "2025-04-03",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Acessibilidade em Aplicativos iOS"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender acessibilidade em aplicativos ios permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "Text(\"Comprar\").accessibilityLabel(\"Botão de compra\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com acessibilidade em aplicativos ios. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar acessibilidade em aplicativos ios pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Acessibilidade em Aplicativos iOS é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 32,
      "thumbnailUrl": "https://example.com",
      "title": "MapKit e Localização",
      "description": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation.",
      "createdAt": "2025-04-04",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: MapKit e Localização"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender mapkit e localização permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "mapView.setRegion(MKCoordinateRegion(...), animated: true)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com mapkit e localização. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar mapkit e localização pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "MapKit e Localização é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 33,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-04-05",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 34,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-04-06",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 35,
      "thumbnailUrl": "https://example.com",
      "title": "Testes Unitários com XCTest",
      "description": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift.",
      "createdAt": "2025-04-07",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Testes Unitários com XCTest"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender testes unitários com xctest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "func testSoma() {\n    XCTAssertEqual(2 + 2, 4)\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com testes unitários com xctest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar testes unitários com xctest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Testes Unitários com XCTest é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 36,
      "thumbnailUrl": "https://example.com",
      "title": "Core Data Avançado",
      "description": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance.",
      "createdAt": "2025-04-08",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Core Data Avançado"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender core data avançado permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Item\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com core data avançado. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar core data avançado pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Core Data Avançado é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 37,
      "thumbnailUrl": "https://example.com",
      "title": "Integração com APIs REST",
      "description": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable.",
      "createdAt": "2025-04-09",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Integração com APIs REST"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender integração com apis rest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let (data, _) = try await URLSession.shared.data(from: url)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com integração com apis rest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar integração com apis rest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Integração com APIs REST é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 38,
      "thumbnailUrl": "https://example.com",
      "title": "Animações Complexas em SwiftUI",
      "description": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect.",
      "createdAt": "2025-04-10",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Animações Complexas em SwiftUI"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender animações complexas em swiftui permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "withAnimation(.easeInOut) {\n    self.expanded.toggle()\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com animações complexas em swiftui. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar animações complexas em swiftui pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Animações Complexas em SwiftUI é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 39,
      "thumbnailUrl": "https://example.com",
      "title": "Acessibilidade em Aplicativos iOS",
      "description": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada.",
      "createdAt": "2025-04-11",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Acessibilidade em Aplicativos iOS"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender acessibilidade em aplicativos ios permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "Text(\"Comprar\").accessibilityLabel(\"Botão de compra\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com acessibilidade em aplicativos ios. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar acessibilidade em aplicativos ios pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Acessibilidade em Aplicativos iOS é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 40,
      "thumbnailUrl": "https://example.com",
      "title": "MapKit e Localização",
      "description": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation.",
      "createdAt": "2025-04-12",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: MapKit e Localização"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender mapkit e localização permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "mapView.setRegion(MKCoordinateRegion(...), animated: true)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com mapkit e localização. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar mapkit e localização pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "MapKit e Localização é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 41,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-04-13",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 42,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-04-14",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 43,
      "thumbnailUrl": "https://example.com",
      "title": "Testes Unitários com XCTest",
      "description": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift.",
      "createdAt": "2025-04-15",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Testes Unitários com XCTest"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como escrever testes unitários eficazes usando XCTest no seu projeto iOS com Swift."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender testes unitários com xctest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "func testSoma() {\n    XCTAssertEqual(2 + 2, 4)\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com testes unitários com xctest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar testes unitários com xctest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Testes Unitários com XCTest é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 44,
      "thumbnailUrl": "https://example.com",
      "title": "Core Data Avançado",
      "description": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance.",
      "createdAt": "2025-04-16",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Core Data Avançado"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Técnicas avançadas para usar o Core Data, incluindo relacionamentos, fetch requests e performance."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender core data avançado permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Item\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com core data avançado. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar core data avançado pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Core Data Avançado é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 45,
      "thumbnailUrl": "https://example.com",
      "title": "Integração com APIs REST",
      "description": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable.",
      "createdAt": "2025-04-17",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Integração com APIs REST"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Como integrar seu app iOS com APIs REST usando URLSession e o protocolo Codable."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender integração com apis rest permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let (data, _) = try await URLSession.shared.data(from: url)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com integração com apis rest. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar integração com apis rest pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Integração com APIs REST é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 46,
      "thumbnailUrl": "https://example.com",
      "title": "Animações Complexas em SwiftUI",
      "description": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect.",
      "createdAt": "2025-04-18",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Animações Complexas em SwiftUI"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Crie animações suaves e complexas usando modifiers como withAnimation e matchedGeometryEffect."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender animações complexas em swiftui permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "withAnimation(.easeInOut) {\n    self.expanded.toggle()\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com animações complexas em swiftui. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar animações complexas em swiftui pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Animações Complexas em SwiftUI é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 47,
      "thumbnailUrl": "https://example.com",
      "title": "Acessibilidade em Aplicativos iOS",
      "description": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada.",
      "createdAt": "2025-04-19",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Acessibilidade em Aplicativos iOS"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Melhore a acessibilidade dos seus apps com suporte a VoiceOver e rotulagem adequada."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender acessibilidade em aplicativos ios permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "Text(\"Comprar\").accessibilityLabel(\"Botão de compra\")"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com acessibilidade em aplicativos ios. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar acessibilidade em aplicativos ios pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Acessibilidade em Aplicativos iOS é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 48,
      "thumbnailUrl": "https://example.com",
      "title": "MapKit e Localização",
      "description": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation.",
      "createdAt": "2025-04-20",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: MapKit e Localização"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Adicione mapas, marcadores e use a localização do usuário com MapKit e CoreLocation."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender mapkit e localização permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "mapView.setRegion(MKCoordinateRegion(...), animated: true)"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com mapkit e localização. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar mapkit e localização pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "MapKit e Localização é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 49,
      "thumbnailUrl": "https://example.com",
      "title": "SwiftUI e Navegação",
      "description": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas.",
      "createdAt": "2025-04-21",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: SwiftUI e Navegação"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Aprenda a navegar entre views em SwiftUI usando NavigationStack e como lidar com estados e rotas dinâmicas."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender swiftui e navegação permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "NavigationStack {\n    NavigationLink(\"Ir para detalhes\", destination: DetailView())\n}"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com swiftui e navegação. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar swiftui e navegação pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "SwiftUI e Navegação é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    },
    {
      "id": 50,
      "thumbnailUrl": "https://example.com",
      "title": "Combine Framework",
      "description": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI.",
      "createdAt": "2025-04-22",
      "isVisible": true,
      "content": [
        {
          "id": 1,
          "type": "headline",
          "value": "Introdução ao tema: Combine Framework"
        },
        {
          "id": 2,
          "type": "body",
          "value": "Explore o framework Combine da Apple para programação reativa e como ele pode ser usado com SwiftUI."
        },
        {
          "id": 3,
          "type": "headline",
          "value": "Por que isso é importante no desenvolvimento iOS?"
        },
        {
          "id": 4,
          "type": "body",
          "value": "Entender combine framework permite construir aplicativos mais robustos, eficientes e com melhor experiência para o usuário."
        },
        {
          "id": 5,
          "type": "headline",
          "value": "Exemplo prático"
        },
        {
          "id": 6,
          "type": "body",
          "value": "Este exemplo demonstra uma aplicação prática do conceito em um cenário real de desenvolvimento iOS."
        },
        {
          "id": 7,
          "type": "code",
          "lang": "swift",
          "code": "let publisher = Just(\"Olá\")\n    .sink { value in print(value) }"
        },
        {
          "id": 8,
          "type": "headline",
          "value": "Boas práticas"
        },
        {
          "id": 9,
          "type": "body",
          "value": "Evite abordagens obsoletas quando trabalhar com combine framework. Prefira sempre padrões atualizados e APIs modernas."
        },
        {
          "id": 10,
          "type": "headline",
          "value": "Dificuldades comuns"
        },
        {
          "id": 11,
          "type": "body",
          "value": "Alguns desenvolvedores encontram dificuldades ao implementar combine framework pela primeira vez, como lidar com erros de runtime ou confusões com sintaxes específicas."
        },
        {
          "id": 12,
          "type": "headline",
          "value": "Recursos adicionais"
        },
        {
          "id": 13,
          "type": "body",
          "value": "Explore a documentação oficial da Apple, vídeos da WWDC e tutoriais da comunidade para aprofundar ainda mais seu conhecimento."
        },
        {
          "id": 14,
          "type": "headline",
          "value": "Conclusão"
        },
        {
          "id": 15,
          "type": "body",
          "value": "Combine Framework é uma habilidade essencial no toolkit de qualquer desenvolvedor iOS moderno. Dominar esse tema pode elevar o nível técnico dos seus aplicativos."
        }
      ]
    }
  ]
}
